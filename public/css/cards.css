/* ==========================================================================
   Estilos para Cards de Opção/Feedback e Loading
   (Usado em feedback.html e potencialmente outras páginas com cards)
   ========================================================================== */

/* Grid para os Cards */
.options-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Layout responsivo */
    gap: 25px;
    margin-top: 20px;
}

/* Estilo do Card de Opção */
.option-card {
    background: white;
    border-radius: var(--border-radius); /* Usa variável do estilo-principal.css */
    box-shadow: var(--shadow-md);       /* Usa variável do estilo-principal.css */
    overflow: hidden; /* Garante que o border-radius funcione no header */
    transition: var(--transition);      /* Usa variável do estilo-principal.css */
    display: flex;
    flex-direction: column;
    animation: fadeIn 0.6s ease forwards; /* Requer @keyframes fadeIn */
    /* Nota: @keyframes fadeIn idealmente definido uma única vez no estilo-principal.css */
}

.option-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-lg);       /* Usa variável do estilo-principal.css */
}

.option-header {
    padding: 20px 25px;
    background: linear-gradient(145deg, var(--primary), var(--secondary)); /* Usa variáveis */
    color: white;
    /* Ajusta border-radius para aplicar só nos cantos superiores */
    /* border-radius: var(--border-radius) var(--border-radius) 0 0; (Removido pois overflow:hidden no card já resolve) */
}

.option-header h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    display: flex;
    align-items: center;
}

.option-header h3 i {
    margin-right: 10px;
}

.option-body {
    padding: 25px;
    flex-grow: 1; /* Faz o corpo ocupar espaço disponível */
    display: flex;
    flex-direction: column;
}

.option-description {
    color: var(--text-main);    /* Usa variável do estilo-principal.css */
    font-size: 15px;
    line-height: 1.7;
    margin-bottom: 20px;
    flex-grow: 1; /* Ocupa espaço para alinhar botões no final */
}

.option-description strong {
    display: block;
    margin-top: 10px;
    font-weight: 600;
    color: var(--primary);      /* Usa variável do estilo-principal.css */
}

/* Botão específico para os cards */
.option-button {
    display: inline-block;
    background: var(--primary);   /* Usa variável do estilo-principal.css */
    color: white;
    text-decoration: none;
    padding: 12px 25px;
    border-radius: 8px;
    font-weight: 600;
    transition: var(--transition);  /* Usa variável do estilo-principal.css */
    border: none;
    cursor: pointer;
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    text-align: center;
    align-self: center; /* Centraliza o botão se o flex container permitir */
    width: fit-content; /* Botão se ajusta ao conteúdo */
}

.option-button:hover {
    background: var(--primary-dark); /* Usa variável do estilo-principal.css */
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(30, 144, 255, 0.3);
}

/* Estado de Loading */
.loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 50px 0;
    min-height: 150px;
    width: 100%;
}

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(30, 144, 255, 0.1);
    border-left-color: var(--primary); /* Usa variável do estilo-principal.css */
    border-radius: 50%;
    animation: spin 1s linear infinite; /* Requer @keyframes spin */
    margin-bottom: 15px;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

.loading-text {
    font-size: 15px;
    color: var(--text-light);   /* Usa variável do estilo-principal.css */
}


/* ==========================================================================
   Estilos Responsivos Específicos para Cards
   ========================================================================== */

@media (max-width: 768px) {
     /* Ajusta o grid de opções para uma coluna */
    .options-grid {
        grid-template-columns: 1fr;
    }
    /* Outros ajustes responsivos específicos dos cards podem vir aqui */
}

/* Keyframe para animação do card (se não estiver no estilo-principal.css) */
/* É melhor definir @keyframes apenas uma vez, idealmente no estilo-principal.css */
/* @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
} */